# deployment-pipeline.yaml
---
# Set up a namespace for the auto-deployment system
apiVersion: v1
kind: Namespace
metadata:
  name: auto-deploy

---
# PersistentVolume for storing uploaded containers
apiVersion: v1
kind: PersistentVolume
metadata:
  name: container-storage
  namespace: auto-deploy
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/containers
    type: DirectoryOrCreate

---
# PersistentVolumeClaim for the storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: container-storage-claim
  namespace: auto-deploy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Service Account for the deployment controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-controller
  namespace: auto-deploy

---
# RBAC Role for deployment permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-manager
  namespace: auto-deploy
rules:
- apiGroups: ["apps", ""]
  resources: ["deployments", "services", "pods"]
  verbs: ["create", "get", "list", "update", "delete"]

---
# Role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployment-manager-binding
  namespace: auto-deploy
subjects:
- kind: ServiceAccount
  name: deploy-controller
  namespace: auto-deploy
roleRef:
  kind: Role
  name: deployment-manager
  apiGroup: rbac.authorization.k8s.io

---
# Deployment for the controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-controller
  namespace: auto-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy-controller
  template:
    metadata:
      labels:
        app: deploy-controller
    spec:
      serviceAccountName: deploy-controller
      containers:
      - name: controller
        image: deploy-controller:latest  # You'll need to build this
        volumeMounts:
        - name: container-storage
          mountPath: /data/containers
      volumes:
      - name: container-storage
        persistentVolumeClaim:
          claimName: container-storage-claim

---
# Service for the deployment controller
apiVersion: v1
kind: Service
metadata:
  name: deploy-controller-service
  namespace: auto-deploy
spec:
  selector:
    app: deploy-controller
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
# Ingress for the deployment controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deploy-controller-ingress
  namespace: auto-deploy
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /deploy
        pathType: Prefix
        backend:
          service:
            name: deploy-controller-service
            port:
              number: 80
